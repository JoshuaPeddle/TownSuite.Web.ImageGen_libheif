# https://www.linode.com/docs/guides/how-to-configure-load-balancing-with-tls-encryption-on-a-kubernetes-cluster/
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: ts-imagegen-ns
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-imagegen-app
  labels:
    app: ts-imagegen-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ts-imagegen-app
  template:
    metadata:
      labels:
        app: ts-imagegen-app
      namespace: ts-imagegen-ns
    spec:
      containers:
      - name: imagegen
        image: townsuite/imagegen:latest
        ports:
        - containerPort: 80
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 3
          periodSeconds: 10
        startupProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 3
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 3
          periodSeconds: 10
      #imagePullSecrets:
      #- name: [Your Secrets Name]

---
apiVersion: v1
kind: Service
metadata:
  name: ts-imagegen-service
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: ts-imagegen-app
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ts-imagegen-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - [Add your url here]
    secretName: letsencrypt-secret-prod
  rules:
  - host: [Add your url here]
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: ts-imagegen-service
            port:
              number: 80

